{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _ApiClient = _interopRequireDefault(require(\"../ApiClient\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * The RedditSentimentContent model module.\n * @module model/RedditSentimentContent\n * @version 1.2.10\n */\n\n\nvar RedditSentimentContent = /*#__PURE__*/function () {\n  /**\n   * Constructs a new <code>RedditSentimentContent</code>.\n   * @alias module:model/RedditSentimentContent\n   */\n  function RedditSentimentContent() {\n    _classCallCheck(this, RedditSentimentContent);\n\n    RedditSentimentContent.initialize(this);\n  }\n  /**\n   * Initializes the fields of this object.\n   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).\n   * Only for internal use.\n   */\n\n\n  _createClass(RedditSentimentContent, null, [{\n    key: \"initialize\",\n    value: function initialize(obj) {}\n    /**\n     * Constructs a <code>RedditSentimentContent</code> from a plain JavaScript object, optionally creating a new instance.\n     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n     * @param {Object} data The plain JavaScript object bearing properties of interest.\n     * @param {module:model/RedditSentimentContent} obj Optional instance to populate.\n     * @return {module:model/RedditSentimentContent} The populated <code>RedditSentimentContent</code> instance.\n     */\n\n  }, {\n    key: \"constructFromObject\",\n    value: function constructFromObject(data, obj) {\n      if (data) {\n        obj = obj || new RedditSentimentContent();\n\n        if (data.hasOwnProperty('mention')) {\n          obj['mention'] = _ApiClient[\"default\"].convertToType(data['mention'], 'Number');\n        }\n\n        if (data.hasOwnProperty('positiveMention')) {\n          obj['positiveMention'] = _ApiClient[\"default\"].convertToType(data['positiveMention'], 'Number');\n        }\n\n        if (data.hasOwnProperty('negativeMention')) {\n          obj['negativeMention'] = _ApiClient[\"default\"].convertToType(data['negativeMention'], 'Number');\n        }\n\n        if (data.hasOwnProperty('positiveScore')) {\n          obj['positiveScore'] = _ApiClient[\"default\"].convertToType(data['positiveScore'], 'Number');\n        }\n\n        if (data.hasOwnProperty('negativeScore')) {\n          obj['negativeScore'] = _ApiClient[\"default\"].convertToType(data['negativeScore'], 'Number');\n        }\n\n        if (data.hasOwnProperty('score')) {\n          obj['score'] = _ApiClient[\"default\"].convertToType(data['score'], 'Number');\n        }\n\n        if (data.hasOwnProperty('atTime')) {\n          obj['atTime'] = _ApiClient[\"default\"].convertToType(data['atTime'], 'String');\n        }\n      }\n\n      return obj;\n    }\n  }]);\n\n  return RedditSentimentContent;\n}();\n/**\n * Number of mentions\n * @member {Number} mention\n */\n\n\nRedditSentimentContent.prototype['mention'] = undefined;\n/**\n * Number of positive mentions\n * @member {Number} positiveMention\n */\n\nRedditSentimentContent.prototype['positiveMention'] = undefined;\n/**\n * Number of negative mentions\n * @member {Number} negativeMention\n */\n\nRedditSentimentContent.prototype['negativeMention'] = undefined;\n/**\n * Positive score. Range 0-1\n * @member {Number} positiveScore\n */\n\nRedditSentimentContent.prototype['positiveScore'] = undefined;\n/**\n * Negative score. Range 0-1\n * @member {Number} negativeScore\n */\n\nRedditSentimentContent.prototype['negativeScore'] = undefined;\n/**\n * Final score. Range: -1 to 1 with 1 is very positive and -1 is very negative\n * @member {Number} score\n */\n\nRedditSentimentContent.prototype['score'] = undefined;\n/**\n * Period.\n * @member {String} atTime\n */\n\nRedditSentimentContent.prototype['atTime'] = undefined;\nvar _default = RedditSentimentContent;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/paulhinh/dev/tamuhack/EduCoin/node_modules/finnhub/dist/model/RedditSentimentContent.js"],"names":["Object","defineProperty","exports","value","_ApiClient","_interopRequireDefault","require","obj","__esModule","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","_createClass","protoProps","staticProps","prototype","RedditSentimentContent","initialize","constructFromObject","data","hasOwnProperty","convertToType","undefined","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _ApiClient = _interopRequireDefault(require(\"../ApiClient\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * The RedditSentimentContent model module.\n * @module model/RedditSentimentContent\n * @version 1.2.10\n */\nvar RedditSentimentContent = /*#__PURE__*/function () {\n  /**\n   * Constructs a new <code>RedditSentimentContent</code>.\n   * @alias module:model/RedditSentimentContent\n   */\n  function RedditSentimentContent() {\n    _classCallCheck(this, RedditSentimentContent);\n\n    RedditSentimentContent.initialize(this);\n  }\n  /**\n   * Initializes the fields of this object.\n   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).\n   * Only for internal use.\n   */\n\n\n  _createClass(RedditSentimentContent, null, [{\n    key: \"initialize\",\n    value: function initialize(obj) {}\n    /**\n     * Constructs a <code>RedditSentimentContent</code> from a plain JavaScript object, optionally creating a new instance.\n     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n     * @param {Object} data The plain JavaScript object bearing properties of interest.\n     * @param {module:model/RedditSentimentContent} obj Optional instance to populate.\n     * @return {module:model/RedditSentimentContent} The populated <code>RedditSentimentContent</code> instance.\n     */\n\n  }, {\n    key: \"constructFromObject\",\n    value: function constructFromObject(data, obj) {\n      if (data) {\n        obj = obj || new RedditSentimentContent();\n\n        if (data.hasOwnProperty('mention')) {\n          obj['mention'] = _ApiClient[\"default\"].convertToType(data['mention'], 'Number');\n        }\n\n        if (data.hasOwnProperty('positiveMention')) {\n          obj['positiveMention'] = _ApiClient[\"default\"].convertToType(data['positiveMention'], 'Number');\n        }\n\n        if (data.hasOwnProperty('negativeMention')) {\n          obj['negativeMention'] = _ApiClient[\"default\"].convertToType(data['negativeMention'], 'Number');\n        }\n\n        if (data.hasOwnProperty('positiveScore')) {\n          obj['positiveScore'] = _ApiClient[\"default\"].convertToType(data['positiveScore'], 'Number');\n        }\n\n        if (data.hasOwnProperty('negativeScore')) {\n          obj['negativeScore'] = _ApiClient[\"default\"].convertToType(data['negativeScore'], 'Number');\n        }\n\n        if (data.hasOwnProperty('score')) {\n          obj['score'] = _ApiClient[\"default\"].convertToType(data['score'], 'Number');\n        }\n\n        if (data.hasOwnProperty('atTime')) {\n          obj['atTime'] = _ApiClient[\"default\"].convertToType(data['atTime'], 'String');\n        }\n      }\n\n      return obj;\n    }\n  }]);\n\n  return RedditSentimentContent;\n}();\n/**\n * Number of mentions\n * @member {Number} mention\n */\n\n\nRedditSentimentContent.prototype['mention'] = undefined;\n/**\n * Number of positive mentions\n * @member {Number} positiveMention\n */\n\nRedditSentimentContent.prototype['positiveMention'] = undefined;\n/**\n * Number of negative mentions\n * @member {Number} negativeMention\n */\n\nRedditSentimentContent.prototype['negativeMention'] = undefined;\n/**\n * Positive score. Range 0-1\n * @member {Number} positiveScore\n */\n\nRedditSentimentContent.prototype['positiveScore'] = undefined;\n/**\n * Negative score. Range 0-1\n * @member {Number} negativeScore\n */\n\nRedditSentimentContent.prototype['negativeScore'] = undefined;\n/**\n * Final score. Range: -1 to 1 with 1 is very positive and -1 is very negative\n * @member {Number} score\n */\n\nRedditSentimentContent.prototype['score'] = undefined;\n/**\n * Period.\n * @member {String} atTime\n */\n\nRedditSentimentContent.prototype['atTime'] = undefined;\nvar _default = RedditSentimentContent;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}