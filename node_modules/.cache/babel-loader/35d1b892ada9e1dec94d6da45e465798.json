{"ast":null,"code":"import _omit from \"lodash/omit\";\nimport _assign from \"lodash/assign\";\nimport React from \"react\";\nimport { Bar, getBarPath, getBarWidth, getCornerRadius, getPolarBarPath, getStyle } from \"victory-bar\";\nimport { useCanvasContext } from \"./hooks/use-canvas-context\";\n\nvar evaluateProps = function (props) {\n  /**\n   * Potential evaluated props of following must be evaluated in this order:\n   * 1) `style`\n   * 2) `barWidth`\n   * 3) `cornerRadius`\n   */\n  var style = getStyle(props.style, props);\n  var barWidth = getBarWidth(props.barWidth, _assign({}, props, {\n    style: style\n  }));\n  var cornerRadius = getCornerRadius(props.cornerRadius, _assign({}, props, {\n    style: style,\n    barWidth: barWidth\n  }));\n  return _assign({}, props, {\n    style: style,\n    barWidth: barWidth,\n    cornerRadius: cornerRadius\n  });\n};\n\nexport var usePreviousValue = function (value) {\n  var ref = React.useRef();\n  React.useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nvar CanvasBar = function (initialProps) {\n  var _useCanvasContext = useCanvasContext(),\n      canvasRef = _useCanvasContext.canvasRef;\n\n  var props = evaluateProps(initialProps);\n  var polar = props.polar,\n      style = props.style,\n      barWidth = props.barWidth,\n      cornerRadius = props.cornerRadius,\n      origin = props.origin;\n  var path2d = React.useMemo(function () {\n    var p = polar ? getPolarBarPath(props, cornerRadius) : getBarPath(props, barWidth, cornerRadius);\n    return new Path2D(p);\n  }, [polar, barWidth, cornerRadius, props]);\n  var previousPath = usePreviousValue(path2d);\n  var draw = React.useCallback(function (ctx, path) {\n    ctx.fillStyle = style.fill;\n    ctx.strokeStyle = style.stroke;\n    ctx.globalAlpha = style.fillOpacity;\n    ctx.lineWidth = style.strokeWidth;\n\n    if (polar) {\n      ctx.translate(origin.x, origin.y);\n    }\n\n    ctx.fill(path);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n  }, [style, origin, polar]); // This will clear the previous bar without clearing the entire canvas\n\n  var clearPreviousPath = React.useCallback(function (ctx) {\n    if (previousPath) {\n      ctx.save(); // This ensures that the entire shape is erased\n\n      ctx.lineWidth = style.strokeWidth + 2;\n      ctx.globalCompositeOperation = \"destination-out\";\n      draw(ctx, previousPath);\n      ctx.stroke(previousPath);\n      ctx.restore();\n    }\n  }, [draw, previousPath, style]);\n  React.useEffect(function () {\n    var ctx = canvasRef.current.getContext(\"2d\");\n    clearPreviousPath(ctx);\n    draw(ctx, path2d);\n  }, [canvasRef, draw, polar, barWidth, cornerRadius, props, path2d, clearPreviousPath]);\n  return null;\n};\n\nCanvasBar.propTypes = _omit(Bar.propTypes, \"pathComponent\");\nexport default CanvasBar;","map":{"version":3,"sources":["/Users/paulhinh/dev/tamuhack/EduCoin/node_modules/victory-canvas/es/canvas-bar.js"],"names":["_omit","_assign","React","Bar","getBarPath","getBarWidth","getCornerRadius","getPolarBarPath","getStyle","useCanvasContext","evaluateProps","props","style","barWidth","cornerRadius","usePreviousValue","value","ref","useRef","useEffect","current","CanvasBar","initialProps","_useCanvasContext","canvasRef","polar","origin","path2d","useMemo","p","Path2D","previousPath","draw","useCallback","ctx","path","fillStyle","fill","strokeStyle","stroke","globalAlpha","fillOpacity","lineWidth","strokeWidth","translate","x","y","setTransform","clearPreviousPath","save","globalCompositeOperation","restore","getContext","propTypes"],"mappings":"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","sourcesContent":["import _omit from \"lodash/omit\";\nimport _assign from \"lodash/assign\";\nimport React from \"react\";\nimport { Bar, getBarPath, getBarWidth, getCornerRadius, getPolarBarPath, getStyle } from \"victory-bar\";\nimport { useCanvasContext } from \"./hooks/use-canvas-context\";\n\nvar evaluateProps = function (props) {\n  /**\n   * Potential evaluated props of following must be evaluated in this order:\n   * 1) `style`\n   * 2) `barWidth`\n   * 3) `cornerRadius`\n   */\n  var style = getStyle(props.style, props);\n  var barWidth = getBarWidth(props.barWidth, _assign({}, props, {\n    style: style\n  }));\n  var cornerRadius = getCornerRadius(props.cornerRadius, _assign({}, props, {\n    style: style,\n    barWidth: barWidth\n  }));\n  return _assign({}, props, {\n    style: style,\n    barWidth: barWidth,\n    cornerRadius: cornerRadius\n  });\n};\n\nexport var usePreviousValue = function (value) {\n  var ref = React.useRef();\n  React.useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nvar CanvasBar = function (initialProps) {\n  var _useCanvasContext = useCanvasContext(),\n      canvasRef = _useCanvasContext.canvasRef;\n\n  var props = evaluateProps(initialProps);\n  var polar = props.polar,\n      style = props.style,\n      barWidth = props.barWidth,\n      cornerRadius = props.cornerRadius,\n      origin = props.origin;\n  var path2d = React.useMemo(function () {\n    var p = polar ? getPolarBarPath(props, cornerRadius) : getBarPath(props, barWidth, cornerRadius);\n    return new Path2D(p);\n  }, [polar, barWidth, cornerRadius, props]);\n  var previousPath = usePreviousValue(path2d);\n  var draw = React.useCallback(function (ctx, path) {\n    ctx.fillStyle = style.fill;\n    ctx.strokeStyle = style.stroke;\n    ctx.globalAlpha = style.fillOpacity;\n    ctx.lineWidth = style.strokeWidth;\n\n    if (polar) {\n      ctx.translate(origin.x, origin.y);\n    }\n\n    ctx.fill(path);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n  }, [style, origin, polar]); // This will clear the previous bar without clearing the entire canvas\n\n  var clearPreviousPath = React.useCallback(function (ctx) {\n    if (previousPath) {\n      ctx.save(); // This ensures that the entire shape is erased\n\n      ctx.lineWidth = style.strokeWidth + 2;\n      ctx.globalCompositeOperation = \"destination-out\";\n      draw(ctx, previousPath);\n      ctx.stroke(previousPath);\n      ctx.restore();\n    }\n  }, [draw, previousPath, style]);\n  React.useEffect(function () {\n    var ctx = canvasRef.current.getContext(\"2d\");\n    clearPreviousPath(ctx);\n    draw(ctx, path2d);\n  }, [canvasRef, draw, polar, barWidth, cornerRadius, props, path2d, clearPreviousPath]);\n  return null;\n};\n\nCanvasBar.propTypes = _omit(Bar.propTypes, \"pathComponent\");\nexport default CanvasBar;"]},"metadata":{},"sourceType":"module"}