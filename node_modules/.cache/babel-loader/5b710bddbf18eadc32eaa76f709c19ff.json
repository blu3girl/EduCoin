{"ast":null,"code":"import _keys from \"lodash/keys\";\nimport _includes from \"lodash/includes\";\nimport _uniq from \"lodash/uniq\";\nimport _omitBy from \"lodash/omitBy\";\nimport _pickBy from \"lodash/pickBy\";\nimport _without from \"lodash/without\";\nimport _isFunction from \"lodash/isFunction\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _assign from \"lodash/assign\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nvar GLOBAL_EVENT_REGEX = /^onGlobal(.*)$/;\n/* Returns all own and shared events that should be attached to a single target element,\n * i.e. an individual bar specified by target: \"data\", eventKey: [index].\n * Returned events are scoped to the appropriate state. Either that of the component itself\n * (i.e. VictoryBar) in the case of own events, or that of the parent component\n * (i.e. VictoryChart) in the case of shared events\n */\n// eslint-disable-next-line max-params,no-shadow\n\nexport function getEvents(props, target, eventKey, getScopedEvents) {\n  var _this = this; // Returns all events that apply to a particular target element\n\n\n  var getEventsByTarget = function (events) {\n    var getSelectedEvents = function () {\n      var targetEvents = events.reduce(function (memo, event) {\n        if (event.target !== undefined) {\n          var matchesTarget = Array.isArray(event.target) ? _includes(event.target, target) : \"\".concat(event.target) === \"\".concat(target);\n          return matchesTarget ? memo.concat(event) : memo;\n        }\n\n        return memo.concat(event);\n      }, []);\n\n      if (eventKey !== undefined && target !== \"parent\") {\n        return targetEvents.filter(function (obj) {\n          var targetKeys = obj.eventKey;\n\n          var useKey = function (key) {\n            return key ? \"\".concat(key) === \"\".concat(eventKey) : true;\n          };\n\n          return Array.isArray(targetKeys) ? targetKeys.some(function (k) {\n            return useKey(k);\n          }) : useKey(targetKeys);\n        });\n      }\n\n      return targetEvents;\n    };\n\n    var selectedEvents = getSelectedEvents();\n    return Array.isArray(selectedEvents) && selectedEvents.reduce(function (memo, event) {\n      return event ? _assign(memo, event.eventHandlers) : memo;\n    }, {});\n  };\n  /* Returns all events from props and defaultEvents from components. Events handlers\n   * specified in props will override handlers for the same event if they are also\n   * specified in defaultEvents of a sub-component\n   */\n\n\n  var getAllEvents = function () {\n    // Mandatory usage: `getEvents.bind(this)`\n\n    /* eslint-disable no-invalid-this */\n    if (Array.isArray(_this.componentEvents)) {\n      var _this$componentEvents;\n\n      return Array.isArray(props.events) ? (_this$componentEvents = _this.componentEvents).concat.apply(_this$componentEvents, _toConsumableArray(props.events)) : _this.componentEvents;\n    }\n    /* eslint-enable no-invalid-this */\n\n\n    return props.events;\n  };\n\n  var allEvents = getAllEvents();\n  var ownEvents = allEvents && _isFunction(getScopedEvents) ? getScopedEvents(getEventsByTarget(allEvents), target) : undefined;\n\n  if (!props.sharedEvents) {\n    return ownEvents;\n  }\n\n  var getSharedEvents = props.sharedEvents.getEvents;\n  var sharedEvents = props.sharedEvents.events && getSharedEvents(getEventsByTarget(props.sharedEvents.events), target);\n  return _assign({}, sharedEvents, ownEvents);\n}\n/* Returns a modified events object where each event handler is replaced by a new\n * function that calls the original handler and then calls setState with the return\n * of the original event handler assigned to state property that maps to the target\n * element.\n */\n// eslint-disable-next-line max-params\n\nexport function getScopedEvents(events, namespace, childType, baseProps) {\n  var _this2 = this;\n\n  if (_isEmpty(events)) {\n    return {};\n  } // Mandatory usage: `getScopedEvents.bind(this)`\n  // eslint-disable-next-line no-invalid-this\n\n\n  baseProps = baseProps || this.baseProps; // returns the original base props or base state of a given target element\n\n  var getTargetProps = function (identifier, type) {\n    var childName = identifier.childName,\n        target = identifier.target,\n        key = identifier.key; // eslint-disable-next-line no-invalid-this\n\n    var baseType = type === \"props\" ? baseProps : _this2.state || {};\n    var base = childName === undefined || childName === null || !baseType[childName] ? baseType : baseType[childName];\n    return key === \"parent\" ? base.parent : base[key] && base[key][target];\n  }; // Returns the state object with the mutation caused by a given eventReturn\n  // applied to the appropriate property on the state object\n\n\n  var parseEvent = function (eventReturn, eventKey) {\n    var childNames = namespace === \"parent\" ? eventReturn.childName : eventReturn.childName || childType;\n    var target = eventReturn.target || namespace; // returns all eventKeys to modify for a targeted childName\n\n    var getKeys = function (childName) {\n      if (target === \"parent\") {\n        return \"parent\";\n      }\n\n      if (eventReturn.eventKey === \"all\") {\n        return baseProps[childName] ? _without(_keys(baseProps[childName]), \"parent\") : _without(_keys(baseProps), \"parent\");\n      } else if (eventReturn.eventKey === undefined && eventKey === \"parent\") {\n        return baseProps[childName] ? _keys(baseProps[childName]) : _keys(baseProps);\n      }\n\n      return eventReturn.eventKey !== undefined ? eventReturn.eventKey : eventKey;\n    }; // returns the state object with mutated props applied for a single key\n\n\n    var getMutationObject = function (key, childName) {\n      // eslint-disable-next-line no-invalid-this\n      var baseState = _this2.state || {};\n\n      if (!_isFunction(eventReturn.mutation)) {\n        return baseState;\n      }\n\n      var mutationTargetProps = getTargetProps({\n        childName: childName,\n        key: key,\n        target: target\n      }, \"props\");\n      var mutationTargetState = getTargetProps({\n        childName: childName,\n        key: key,\n        target: target\n      }, \"state\");\n      var mutatedProps = eventReturn.mutation(_assign({}, mutationTargetProps, mutationTargetState), baseProps);\n      var childState = baseState[childName] || {};\n\n      var filterState = function (state) {\n        if (state[key] && state[key][target]) {\n          delete state[key][target];\n        }\n\n        if (state[key] && !_keys(state[key]).length) {\n          delete state[key];\n        }\n\n        return state;\n      };\n\n      var extendState = function (state) {\n        return target === \"parent\" ? _assign(state, _defineProperty({}, key, _assign(state[key], mutatedProps))) : _assign(state, _defineProperty({}, key, _assign(state[key], _defineProperty({}, target, mutatedProps))));\n      };\n\n      var updateState = function (state) {\n        return mutatedProps ? extendState(state) : filterState(state);\n      };\n\n      return childName !== undefined && childName !== null ? _assign(baseState, _defineProperty({}, childName, updateState(childState))) : updateState(baseState);\n    }; // returns entire mutated state for a given childName\n\n\n    var getReturnByChild = function (childName) {\n      var mutationKeys = getKeys(childName);\n      return Array.isArray(mutationKeys) ? mutationKeys.reduce(function (memo, key) {\n        return _assign(memo, getMutationObject(key, childName));\n      }, {}) : getMutationObject(mutationKeys, childName);\n    }; // returns an entire mutated state for all children\n\n\n    var allChildNames = childNames === \"all\" ? _without(_keys(baseProps), \"parent\") : childNames;\n    return Array.isArray(allChildNames) ? allChildNames.reduce(function (memo, childName) {\n      return _assign(memo, getReturnByChild(childName));\n    }, {}) : getReturnByChild(allChildNames);\n  }; // Parses an array of event returns into a single state mutation\n\n\n  var parseEventReturn = function (eventReturn, eventKey) {\n    return Array.isArray(eventReturn) ? eventReturn.reduce(function (memo, props) {\n      memo = _assign({}, memo, parseEvent(props, eventKey));\n      return memo;\n    }, {}) : parseEvent(eventReturn, eventKey);\n  };\n\n  var compileCallbacks = function (eventReturn) {\n    var getCallback = function (obj) {\n      return _isFunction(obj.callback) && obj.callback;\n    };\n\n    var callbacks = Array.isArray(eventReturn) ? eventReturn.map(function (evtObj) {\n      return getCallback(evtObj);\n    }) : [getCallback(eventReturn)];\n    var callbackArray = callbacks.filter(function (callback) {\n      return callback !== false;\n    });\n    return callbackArray.length ? function () {\n      return callbackArray.forEach(function (callback) {\n        return callback();\n      });\n    } : undefined;\n  }; // A function that calls a particular event handler, parses its return\n  // into a state mutation, and calls setState\n  // eslint-disable-next-line max-params\n\n\n  var onEvent = function (evt, childProps, eventKey, eventName) {\n    // eslint-disable-next-line no-invalid-this\n    var eventReturn = events[eventName](evt, childProps, eventKey, _this2);\n\n    if (!_isEmpty(eventReturn)) {\n      var callbacks = compileCallbacks(eventReturn); // eslint-disable-next-line no-invalid-this\n\n      _this2.setState(parseEventReturn(eventReturn, eventKey), callbacks);\n    }\n  }; // returns a new events object with enhanced event handlers\n\n\n  return _keys(events).reduce(function (memo, event) {\n    memo[event] = onEvent;\n    return memo;\n  }, {});\n}\n/* Returns a partially applied event handler for a specific target element\n * This allows event handlers to have access to props controlling each element\n */\n\nexport function getPartialEvents(events, eventKey, childProps) {\n  return events ? _keys(events).reduce(function (memo, eventName) {\n    var appliedEvent = function (evt) {\n      return events[eventName](evt, childProps, eventKey, eventName);\n    };\n\n    memo[eventName] = appliedEvent;\n    return memo;\n  }, {}) : {};\n}\n/* Returns the property of the state object corresponding to event changes for\n * a particular element\n */\n\nexport function getEventState(eventKey, namespace, childType) {\n  // Mandatory usage: `getEventState.bind(this)`\n  // eslint-disable-next-line no-invalid-this\n  var state = this.state || {};\n\n  if (!childType) {\n    return eventKey === \"parent\" ? state[eventKey] && state[eventKey][namespace] || state[eventKey] : state[eventKey] && state[eventKey][namespace];\n  }\n\n  return state[childType] && state[childType][eventKey] && state[childType][eventKey][namespace];\n}\n/**\n * Returns a set of all mutations for shared events\n *\n * @param  {Array} mutations an array of mutations objects\n * @param  {Object} baseProps an object that describes all props for children of VictorySharedEvents\n * @param  {Object} baseState an object that describes state for children of VictorySharedEvents\n * @param  {Array} childNames an array of childNames\n *\n * @return {Object} a object describing all mutations for VictorySharedEvents\n */\n// eslint-disable-next-line max-params\n\nexport function getExternalMutationsWithChildren(mutations, baseProps, baseState, childNames) {\n  baseProps = baseProps || {};\n  baseState = baseState || {};\n  return childNames.reduce(function (memo, childName) {\n    var childState = baseState[childName];\n    var mutation = getExternalMutations(mutations, baseProps[childName], baseState[childName], childName);\n    memo[childName] = mutation ? mutation : childState;\n    return _pickBy(memo, function (v) {\n      return !_isEmpty(v);\n    });\n  }, {});\n}\n/**\n * Returns a set of all mutations for a component\n *\n * @param  {Array} mutations an array of mutations objects\n * @param  {Object} baseProps a props object (scoped to a childName when used by shared events)\n * @param  {Object} baseState a state object (scoped to a childName when used by shared events)\n * @param  {String} childName an optional childName\n *\n * @return {Object} a object describing mutations for a given component\n */\n// eslint-disable-next-line max-params\n\nexport function getExternalMutations(mutations, baseProps, baseState, childName) {\n  baseProps = baseProps || {};\n  baseState = baseState || {};\n\n  var eventKeys = _keys(baseProps);\n\n  return eventKeys.reduce(function (memo, eventKey) {\n    var keyState = baseState[eventKey] || {};\n    var keyProps = baseProps[eventKey] || {};\n\n    if (eventKey === \"parent\") {\n      var identifier = {\n        eventKey: eventKey,\n        target: \"parent\"\n      };\n      var mutation = getExternalMutation(mutations, keyProps, keyState, identifier);\n      memo[eventKey] = mutation !== undefined ? _assign({}, keyState, mutation) : keyState;\n    } else {\n      // use keys from both state and props so that elements not intially included in baseProps\n      // will be used. (i.e. labels)\n      var targets = _uniq(_keys(keyProps).concat(_keys(keyState)));\n\n      memo[eventKey] = targets.reduce(function (m, target) {\n        var identifier = {\n          eventKey: eventKey,\n          target: target,\n          childName: childName\n        };\n        var mutation = getExternalMutation(mutations, keyProps[target], keyState[target], identifier);\n        m[target] = mutation !== undefined ? _assign({}, keyState[target], mutation) : keyState[target];\n        return _pickBy(m, function (v) {\n          return !_isEmpty(v);\n        });\n      }, {});\n    }\n\n    return _pickBy(memo, function (v) {\n      return !_isEmpty(v);\n    });\n  }, {});\n}\n/**\n * Returns a set of mutations for a particular element given scoped baseProps and baseState\n *\n * @param  {Array} mutations an array of mutations objects\n * @param  {Object} baseProps a props object (scoped the element specified by the identifier)\n * @param  {Object} baseState a state object (scoped the element specified by the identifier)\n * @param  {Object} identifier { eventKey, target, childName }\n *\n * @return {Object | undefined} a object describing mutations for a given element, or undefined\n */\n// eslint-disable-next-line max-params\n\nexport function getExternalMutation(mutations, baseProps, baseState, identifier) {\n  var filterMutations = function (mutation, type) {\n    if (typeof mutation[type] === \"string\") {\n      return mutation[type] === \"all\" || mutation[type] === identifier[type];\n    } else if (Array.isArray(mutation[type])) {\n      // coerce arrays to strings before matching\n      var stringArray = mutation[type].map(function (m) {\n        return \"\".concat(m);\n      });\n      return _includes(stringArray, identifier[type]);\n    } else {\n      return false;\n    }\n  };\n\n  mutations = Array.isArray(mutations) ? mutations : [mutations];\n  var scopedMutations = mutations;\n\n  if (identifier.childName) {\n    scopedMutations = mutations.filter(function (m) {\n      return filterMutations(m, \"childName\");\n    });\n  } // find any mutation objects that match the target\n\n\n  var targetMutations = scopedMutations.filter(function (m) {\n    return filterMutations(m, \"target\");\n  });\n\n  if (_isEmpty(targetMutations)) {\n    return undefined;\n  }\n\n  var keyMutations = targetMutations.filter(function (m) {\n    return filterMutations(m, \"eventKey\");\n  });\n\n  if (_isEmpty(keyMutations)) {\n    return undefined;\n  }\n\n  return keyMutations.reduce(function (memo, curr) {\n    var mutationFunction = curr && _isFunction(curr.mutation) ? curr.mutation : function () {\n      return undefined;\n    };\n    var currentMutation = mutationFunction(_assign({}, baseProps, baseState));\n    return _assign({}, memo, currentMutation);\n  }, {});\n}\n/* Returns an array of defaultEvents from sub-components of a given component.\n * i.e. any static `defaultEvents` on `labelComponent` will be returned\n */\n\nexport function getComponentEvents(props, components) {\n  var events = Array.isArray(components) && components.reduce(function (memo, componentName) {\n    var _memo;\n\n    var component = props[componentName];\n    var defaultEvents = component && component.type && component.type.defaultEvents;\n    var componentEvents = _isFunction(defaultEvents) ? defaultEvents(component.props) : defaultEvents;\n    memo = Array.isArray(componentEvents) ? (_memo = memo).concat.apply(_memo, _toConsumableArray(componentEvents)) : memo;\n    return memo;\n  }, []);\n  return events && events.length ? events : undefined;\n}\nexport function getGlobalEventNameFromKey(key) {\n  var match = key.match(GLOBAL_EVENT_REGEX);\n  return match && match[1] && match[1].toLowerCase();\n}\nexport var getGlobalEvents = function (events) {\n  return _pickBy(events, function (_, key) {\n    return GLOBAL_EVENT_REGEX.test(key);\n  });\n};\nexport var omitGlobalEvents = function (events) {\n  return _omitBy(events, function (_, key) {\n    return GLOBAL_EVENT_REGEX.test(key);\n  });\n};\nexport var emulateReactEvent = function (event) {\n  return _assign(event, {\n    nativeEvent: event\n  });\n};","map":{"version":3,"sources":["/Users/paulhinh/dev/tamuhack/EduCoin/node_modules/victory-core/es/victory-util/events.js"],"names":["_keys","_includes","_uniq","_omitBy","_pickBy","_without","_isFunction","_isEmpty","_assign","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","prototype","toString","call","Array","from","isArray","i","arr2","length","GLOBAL_EVENT_REGEX","getEvents","props","target","eventKey","getScopedEvents","_this","getEventsByTarget","events","getSelectedEvents","targetEvents","reduce","memo","event","undefined","matchesTarget","concat","filter","targetKeys","useKey","some","k","selectedEvents","eventHandlers","getAllEvents","componentEvents","_this$componentEvents","apply","allEvents","ownEvents","sharedEvents","getSharedEvents","namespace","childType","baseProps","_this2","getTargetProps","identifier","type","childName","baseType","state","base","parent","parseEvent","eventReturn","childNames","getKeys","getMutationObject","baseState","mutation","mutationTargetProps","mutationTargetState","mutatedProps","childState","filterState","extendState","updateState","getReturnByChild","mutationKeys","allChildNames","parseEventReturn","compileCallbacks","getCallback","callback","callbacks","map","evtObj","callbackArray","forEach","onEvent","evt","childProps","eventName","setState","getPartialEvents","appliedEvent","getEventState","getExternalMutationsWithChildren","mutations","getExternalMutations","v","eventKeys","keyState","keyProps","getExternalMutation","targets","m","filterMutations","stringArray","scopedMutations","targetMutations","keyMutations","curr","mutationFunction","currentMutation","getComponentEvents","components","componentName","_memo","component","defaultEvents","getGlobalEventNameFromKey","match","toLowerCase","getGlobalEvents","_","test","omitGlobalEvents","emulateReactEvent","nativeEvent"],"mappings":"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","sourcesContent":["import _keys from \"lodash/keys\";\nimport _includes from \"lodash/includes\";\nimport _uniq from \"lodash/uniq\";\nimport _omitBy from \"lodash/omitBy\";\nimport _pickBy from \"lodash/pickBy\";\nimport _without from \"lodash/without\";\nimport _isFunction from \"lodash/isFunction\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _assign from \"lodash/assign\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nvar GLOBAL_EVENT_REGEX = /^onGlobal(.*)$/;\n/* Returns all own and shared events that should be attached to a single target element,\n * i.e. an individual bar specified by target: \"data\", eventKey: [index].\n * Returned events are scoped to the appropriate state. Either that of the component itself\n * (i.e. VictoryBar) in the case of own events, or that of the parent component\n * (i.e. VictoryChart) in the case of shared events\n */\n// eslint-disable-next-line max-params,no-shadow\n\nexport function getEvents(props, target, eventKey, getScopedEvents) {\n  var _this = this;\n\n  // Returns all events that apply to a particular target element\n  var getEventsByTarget = function (events) {\n    var getSelectedEvents = function () {\n      var targetEvents = events.reduce(function (memo, event) {\n        if (event.target !== undefined) {\n          var matchesTarget = Array.isArray(event.target) ? _includes(event.target, target) : \"\".concat(event.target) === \"\".concat(target);\n          return matchesTarget ? memo.concat(event) : memo;\n        }\n\n        return memo.concat(event);\n      }, []);\n\n      if (eventKey !== undefined && target !== \"parent\") {\n        return targetEvents.filter(function (obj) {\n          var targetKeys = obj.eventKey;\n\n          var useKey = function (key) {\n            return key ? \"\".concat(key) === \"\".concat(eventKey) : true;\n          };\n\n          return Array.isArray(targetKeys) ? targetKeys.some(function (k) {\n            return useKey(k);\n          }) : useKey(targetKeys);\n        });\n      }\n\n      return targetEvents;\n    };\n\n    var selectedEvents = getSelectedEvents();\n    return Array.isArray(selectedEvents) && selectedEvents.reduce(function (memo, event) {\n      return event ? _assign(memo, event.eventHandlers) : memo;\n    }, {});\n  };\n  /* Returns all events from props and defaultEvents from components. Events handlers\n   * specified in props will override handlers for the same event if they are also\n   * specified in defaultEvents of a sub-component\n   */\n\n\n  var getAllEvents = function () {\n    // Mandatory usage: `getEvents.bind(this)`\n\n    /* eslint-disable no-invalid-this */\n    if (Array.isArray(_this.componentEvents)) {\n      var _this$componentEvents;\n\n      return Array.isArray(props.events) ? (_this$componentEvents = _this.componentEvents).concat.apply(_this$componentEvents, _toConsumableArray(props.events)) : _this.componentEvents;\n    }\n    /* eslint-enable no-invalid-this */\n\n\n    return props.events;\n  };\n\n  var allEvents = getAllEvents();\n  var ownEvents = allEvents && _isFunction(getScopedEvents) ? getScopedEvents(getEventsByTarget(allEvents), target) : undefined;\n\n  if (!props.sharedEvents) {\n    return ownEvents;\n  }\n\n  var getSharedEvents = props.sharedEvents.getEvents;\n  var sharedEvents = props.sharedEvents.events && getSharedEvents(getEventsByTarget(props.sharedEvents.events), target);\n  return _assign({}, sharedEvents, ownEvents);\n}\n/* Returns a modified events object where each event handler is replaced by a new\n * function that calls the original handler and then calls setState with the return\n * of the original event handler assigned to state property that maps to the target\n * element.\n */\n// eslint-disable-next-line max-params\n\nexport function getScopedEvents(events, namespace, childType, baseProps) {\n  var _this2 = this;\n\n  if (_isEmpty(events)) {\n    return {};\n  } // Mandatory usage: `getScopedEvents.bind(this)`\n  // eslint-disable-next-line no-invalid-this\n\n\n  baseProps = baseProps || this.baseProps; // returns the original base props or base state of a given target element\n\n  var getTargetProps = function (identifier, type) {\n    var childName = identifier.childName,\n        target = identifier.target,\n        key = identifier.key; // eslint-disable-next-line no-invalid-this\n\n    var baseType = type === \"props\" ? baseProps : _this2.state || {};\n    var base = childName === undefined || childName === null || !baseType[childName] ? baseType : baseType[childName];\n    return key === \"parent\" ? base.parent : base[key] && base[key][target];\n  }; // Returns the state object with the mutation caused by a given eventReturn\n  // applied to the appropriate property on the state object\n\n\n  var parseEvent = function (eventReturn, eventKey) {\n    var childNames = namespace === \"parent\" ? eventReturn.childName : eventReturn.childName || childType;\n    var target = eventReturn.target || namespace; // returns all eventKeys to modify for a targeted childName\n\n    var getKeys = function (childName) {\n      if (target === \"parent\") {\n        return \"parent\";\n      }\n\n      if (eventReturn.eventKey === \"all\") {\n        return baseProps[childName] ? _without(_keys(baseProps[childName]), \"parent\") : _without(_keys(baseProps), \"parent\");\n      } else if (eventReturn.eventKey === undefined && eventKey === \"parent\") {\n        return baseProps[childName] ? _keys(baseProps[childName]) : _keys(baseProps);\n      }\n\n      return eventReturn.eventKey !== undefined ? eventReturn.eventKey : eventKey;\n    }; // returns the state object with mutated props applied for a single key\n\n\n    var getMutationObject = function (key, childName) {\n      // eslint-disable-next-line no-invalid-this\n      var baseState = _this2.state || {};\n\n      if (!_isFunction(eventReturn.mutation)) {\n        return baseState;\n      }\n\n      var mutationTargetProps = getTargetProps({\n        childName: childName,\n        key: key,\n        target: target\n      }, \"props\");\n      var mutationTargetState = getTargetProps({\n        childName: childName,\n        key: key,\n        target: target\n      }, \"state\");\n      var mutatedProps = eventReturn.mutation(_assign({}, mutationTargetProps, mutationTargetState), baseProps);\n      var childState = baseState[childName] || {};\n\n      var filterState = function (state) {\n        if (state[key] && state[key][target]) {\n          delete state[key][target];\n        }\n\n        if (state[key] && !_keys(state[key]).length) {\n          delete state[key];\n        }\n\n        return state;\n      };\n\n      var extendState = function (state) {\n        return target === \"parent\" ? _assign(state, _defineProperty({}, key, _assign(state[key], mutatedProps))) : _assign(state, _defineProperty({}, key, _assign(state[key], _defineProperty({}, target, mutatedProps))));\n      };\n\n      var updateState = function (state) {\n        return mutatedProps ? extendState(state) : filterState(state);\n      };\n\n      return childName !== undefined && childName !== null ? _assign(baseState, _defineProperty({}, childName, updateState(childState))) : updateState(baseState);\n    }; // returns entire mutated state for a given childName\n\n\n    var getReturnByChild = function (childName) {\n      var mutationKeys = getKeys(childName);\n      return Array.isArray(mutationKeys) ? mutationKeys.reduce(function (memo, key) {\n        return _assign(memo, getMutationObject(key, childName));\n      }, {}) : getMutationObject(mutationKeys, childName);\n    }; // returns an entire mutated state for all children\n\n\n    var allChildNames = childNames === \"all\" ? _without(_keys(baseProps), \"parent\") : childNames;\n    return Array.isArray(allChildNames) ? allChildNames.reduce(function (memo, childName) {\n      return _assign(memo, getReturnByChild(childName));\n    }, {}) : getReturnByChild(allChildNames);\n  }; // Parses an array of event returns into a single state mutation\n\n\n  var parseEventReturn = function (eventReturn, eventKey) {\n    return Array.isArray(eventReturn) ? eventReturn.reduce(function (memo, props) {\n      memo = _assign({}, memo, parseEvent(props, eventKey));\n      return memo;\n    }, {}) : parseEvent(eventReturn, eventKey);\n  };\n\n  var compileCallbacks = function (eventReturn) {\n    var getCallback = function (obj) {\n      return _isFunction(obj.callback) && obj.callback;\n    };\n\n    var callbacks = Array.isArray(eventReturn) ? eventReturn.map(function (evtObj) {\n      return getCallback(evtObj);\n    }) : [getCallback(eventReturn)];\n    var callbackArray = callbacks.filter(function (callback) {\n      return callback !== false;\n    });\n    return callbackArray.length ? function () {\n      return callbackArray.forEach(function (callback) {\n        return callback();\n      });\n    } : undefined;\n  }; // A function that calls a particular event handler, parses its return\n  // into a state mutation, and calls setState\n  // eslint-disable-next-line max-params\n\n\n  var onEvent = function (evt, childProps, eventKey, eventName) {\n    // eslint-disable-next-line no-invalid-this\n    var eventReturn = events[eventName](evt, childProps, eventKey, _this2);\n\n    if (!_isEmpty(eventReturn)) {\n      var callbacks = compileCallbacks(eventReturn); // eslint-disable-next-line no-invalid-this\n\n      _this2.setState(parseEventReturn(eventReturn, eventKey), callbacks);\n    }\n  }; // returns a new events object with enhanced event handlers\n\n\n  return _keys(events).reduce(function (memo, event) {\n    memo[event] = onEvent;\n    return memo;\n  }, {});\n}\n/* Returns a partially applied event handler for a specific target element\n * This allows event handlers to have access to props controlling each element\n */\n\nexport function getPartialEvents(events, eventKey, childProps) {\n  return events ? _keys(events).reduce(function (memo, eventName) {\n    var appliedEvent = function (evt) {\n      return events[eventName](evt, childProps, eventKey, eventName);\n    };\n\n    memo[eventName] = appliedEvent;\n    return memo;\n  }, {}) : {};\n}\n/* Returns the property of the state object corresponding to event changes for\n * a particular element\n */\n\nexport function getEventState(eventKey, namespace, childType) {\n  // Mandatory usage: `getEventState.bind(this)`\n  // eslint-disable-next-line no-invalid-this\n  var state = this.state || {};\n\n  if (!childType) {\n    return eventKey === \"parent\" ? state[eventKey] && state[eventKey][namespace] || state[eventKey] : state[eventKey] && state[eventKey][namespace];\n  }\n\n  return state[childType] && state[childType][eventKey] && state[childType][eventKey][namespace];\n}\n/**\n * Returns a set of all mutations for shared events\n *\n * @param  {Array} mutations an array of mutations objects\n * @param  {Object} baseProps an object that describes all props for children of VictorySharedEvents\n * @param  {Object} baseState an object that describes state for children of VictorySharedEvents\n * @param  {Array} childNames an array of childNames\n *\n * @return {Object} a object describing all mutations for VictorySharedEvents\n */\n// eslint-disable-next-line max-params\n\nexport function getExternalMutationsWithChildren(mutations, baseProps, baseState, childNames) {\n  baseProps = baseProps || {};\n  baseState = baseState || {};\n  return childNames.reduce(function (memo, childName) {\n    var childState = baseState[childName];\n    var mutation = getExternalMutations(mutations, baseProps[childName], baseState[childName], childName);\n    memo[childName] = mutation ? mutation : childState;\n    return _pickBy(memo, function (v) {\n      return !_isEmpty(v);\n    });\n  }, {});\n}\n/**\n * Returns a set of all mutations for a component\n *\n * @param  {Array} mutations an array of mutations objects\n * @param  {Object} baseProps a props object (scoped to a childName when used by shared events)\n * @param  {Object} baseState a state object (scoped to a childName when used by shared events)\n * @param  {String} childName an optional childName\n *\n * @return {Object} a object describing mutations for a given component\n */\n// eslint-disable-next-line max-params\n\nexport function getExternalMutations(mutations, baseProps, baseState, childName) {\n  baseProps = baseProps || {};\n  baseState = baseState || {};\n\n  var eventKeys = _keys(baseProps);\n\n  return eventKeys.reduce(function (memo, eventKey) {\n    var keyState = baseState[eventKey] || {};\n    var keyProps = baseProps[eventKey] || {};\n\n    if (eventKey === \"parent\") {\n      var identifier = {\n        eventKey: eventKey,\n        target: \"parent\"\n      };\n      var mutation = getExternalMutation(mutations, keyProps, keyState, identifier);\n      memo[eventKey] = mutation !== undefined ? _assign({}, keyState, mutation) : keyState;\n    } else {\n      // use keys from both state and props so that elements not intially included in baseProps\n      // will be used. (i.e. labels)\n      var targets = _uniq(_keys(keyProps).concat(_keys(keyState)));\n\n      memo[eventKey] = targets.reduce(function (m, target) {\n        var identifier = {\n          eventKey: eventKey,\n          target: target,\n          childName: childName\n        };\n        var mutation = getExternalMutation(mutations, keyProps[target], keyState[target], identifier);\n        m[target] = mutation !== undefined ? _assign({}, keyState[target], mutation) : keyState[target];\n        return _pickBy(m, function (v) {\n          return !_isEmpty(v);\n        });\n      }, {});\n    }\n\n    return _pickBy(memo, function (v) {\n      return !_isEmpty(v);\n    });\n  }, {});\n}\n/**\n * Returns a set of mutations for a particular element given scoped baseProps and baseState\n *\n * @param  {Array} mutations an array of mutations objects\n * @param  {Object} baseProps a props object (scoped the element specified by the identifier)\n * @param  {Object} baseState a state object (scoped the element specified by the identifier)\n * @param  {Object} identifier { eventKey, target, childName }\n *\n * @return {Object | undefined} a object describing mutations for a given element, or undefined\n */\n// eslint-disable-next-line max-params\n\nexport function getExternalMutation(mutations, baseProps, baseState, identifier) {\n  var filterMutations = function (mutation, type) {\n    if (typeof mutation[type] === \"string\") {\n      return mutation[type] === \"all\" || mutation[type] === identifier[type];\n    } else if (Array.isArray(mutation[type])) {\n      // coerce arrays to strings before matching\n      var stringArray = mutation[type].map(function (m) {\n        return \"\".concat(m);\n      });\n      return _includes(stringArray, identifier[type]);\n    } else {\n      return false;\n    }\n  };\n\n  mutations = Array.isArray(mutations) ? mutations : [mutations];\n  var scopedMutations = mutations;\n\n  if (identifier.childName) {\n    scopedMutations = mutations.filter(function (m) {\n      return filterMutations(m, \"childName\");\n    });\n  } // find any mutation objects that match the target\n\n\n  var targetMutations = scopedMutations.filter(function (m) {\n    return filterMutations(m, \"target\");\n  });\n\n  if (_isEmpty(targetMutations)) {\n    return undefined;\n  }\n\n  var keyMutations = targetMutations.filter(function (m) {\n    return filterMutations(m, \"eventKey\");\n  });\n\n  if (_isEmpty(keyMutations)) {\n    return undefined;\n  }\n\n  return keyMutations.reduce(function (memo, curr) {\n    var mutationFunction = curr && _isFunction(curr.mutation) ? curr.mutation : function () {\n      return undefined;\n    };\n    var currentMutation = mutationFunction(_assign({}, baseProps, baseState));\n    return _assign({}, memo, currentMutation);\n  }, {});\n}\n/* Returns an array of defaultEvents from sub-components of a given component.\n * i.e. any static `defaultEvents` on `labelComponent` will be returned\n */\n\nexport function getComponentEvents(props, components) {\n  var events = Array.isArray(components) && components.reduce(function (memo, componentName) {\n    var _memo;\n\n    var component = props[componentName];\n    var defaultEvents = component && component.type && component.type.defaultEvents;\n    var componentEvents = _isFunction(defaultEvents) ? defaultEvents(component.props) : defaultEvents;\n    memo = Array.isArray(componentEvents) ? (_memo = memo).concat.apply(_memo, _toConsumableArray(componentEvents)) : memo;\n    return memo;\n  }, []);\n  return events && events.length ? events : undefined;\n}\nexport function getGlobalEventNameFromKey(key) {\n  var match = key.match(GLOBAL_EVENT_REGEX);\n  return match && match[1] && match[1].toLowerCase();\n}\nexport var getGlobalEvents = function (events) {\n  return _pickBy(events, function (_, key) {\n    return GLOBAL_EVENT_REGEX.test(key);\n  });\n};\nexport var omitGlobalEvents = function (events) {\n  return _omitBy(events, function (_, key) {\n    return GLOBAL_EVENT_REGEX.test(key);\n  });\n};\nexport var emulateReactEvent = function (event) {\n  return _assign(event, {\n    nativeEvent: event\n  });\n};"]},"metadata":{},"sourceType":"module"}