{"ast":null,"code":"import _range from \"lodash/range\";\nexport default {\n  circle: function (x, y, size) {\n    return \"M \".concat(x, \", \").concat(y, \"\\n      m \").concat(-size, \", 0\\n      a \").concat(size, \", \").concat(size, \" 0 1,0 \").concat(size * 2, \",0\\n      a \").concat(size, \", \").concat(size, \" 0 1,0 \").concat(-size * 2, \",0\");\n  },\n  square: function (x, y, size) {\n    var baseSize = 0.87 * size; // eslint-disable-line no-magic-numbers\n\n    var x0 = x - baseSize;\n    var y1 = y + baseSize;\n    var distance = x + baseSize - x0;\n    return \"M \".concat(x0, \", \").concat(y1, \"\\n      h\").concat(distance, \"\\n      v-\").concat(distance, \"\\n      h-\").concat(distance, \"\\n      z\");\n  },\n  diamond: function (x, y, size) {\n    var baseSize = 0.87 * size; // eslint-disable-line no-magic-numbers\n\n    var length = Math.sqrt(2 * (baseSize * baseSize));\n    return \"M \".concat(x, \", \").concat(y + length, \"\\n      l \").concat(length, \", -\").concat(length, \"\\n      l -\").concat(length, \", -\").concat(length, \"\\n      l -\").concat(length, \", \").concat(length, \"\\n      l \").concat(length, \", \").concat(length, \"\\n      z\");\n  },\n  triangleDown: function (x, y, size) {\n    var height = size / 2 * Math.sqrt(3);\n    var x0 = x - size;\n    var x1 = x + size;\n    var y0 = y - size;\n    var y1 = y + height;\n    return \"M \".concat(x0, \", \").concat(y0, \"\\n      L \").concat(x1, \", \").concat(y0, \"\\n      L \").concat(x, \", \").concat(y1, \"\\n      z\");\n  },\n  triangleUp: function (x, y, size) {\n    var height = size / 2 * Math.sqrt(3);\n    var x0 = x - size;\n    var x1 = x + size;\n    var y0 = y - height;\n    var y1 = y + size;\n    return \"M \".concat(x0, \", \").concat(y1, \"\\n      L \").concat(x1, \", \").concat(y1, \"\\n      L \").concat(x, \", \").concat(y0, \"\\n      z\");\n  },\n  plus: function (x, y, size) {\n    var baseSize = 1.1 * size; // eslint-disable-line no-magic-numbers\n\n    var distance = baseSize / 1.5; // eslint-disable-line no-magic-numbers\n\n    return \"\\n      M \".concat(x - distance / 2, \", \").concat(y + baseSize, \"\\n      v-\").concat(distance, \"\\n      h-\").concat(distance, \"\\n      v-\").concat(distance, \"\\n      h\").concat(distance, \"\\n      v-\").concat(distance, \"\\n      h\").concat(distance, \"\\n      v\").concat(distance, \"\\n      h\").concat(distance, \"\\n      v\").concat(distance, \"\\n      h-\").concat(distance, \"\\n      v\").concat(distance, \"\\n      z\");\n  },\n  cross: function (x, y, size) {\n    var baseSize = 0.8 * size; // eslint-disable-line no-magic-numbers\n\n    var distance = baseSize / 1.5; // eslint-disable-line no-magic-numbers\n\n    return \"\\n      M \".concat(x - distance / 2, \", \").concat(y + baseSize + distance, \"\\n      v-\").concat(distance * 2, \"\\n      h-\").concat(distance, \"\\n      v-\").concat(distance, \"\\n      h\").concat(distance, \"\\n      v-\").concat(distance, \"\\n      h\").concat(distance, \"\\n      v\").concat(distance, \"\\n      h\").concat(distance, \"\\n      v\").concat(distance, \"\\n      h-\").concat(distance, \"\\n      v\").concat(distance * 2, \"\\n      z\");\n  },\n  minus: function (x, y, size) {\n    var baseSize = 1.1 * size; // eslint-disable-line no-magic-numbers\n\n    var lineHeight = baseSize - baseSize * 0.3; // eslint-disable-line no-magic-numbers\n\n    var x0 = x - baseSize;\n    var y1 = y + lineHeight / 2;\n    var distance = x + baseSize - x0;\n    return \"M \".concat(x0, \", \").concat(y1, \"\\n      h\").concat(distance, \"\\n      v-\").concat(lineHeight, \"\\n      h-\").concat(distance, \"\\n      z\");\n  },\n  star: function (x, y, size) {\n    var baseSize = 1.35 * size; // eslint-disable-line no-magic-numbers\n\n    var angle = Math.PI / 5; // eslint-disable-line no-magic-numbers\n    // eslint-disable-next-line no-magic-numbers\n\n    var starCoords = _range(10).map(function (index) {\n      var length = index % 2 === 0 ? baseSize : baseSize / 2;\n      return \"\".concat(length * Math.sin(angle * (index + 1)) + x, \",\\n        \").concat(length * Math.cos(angle * (index + 1)) + y);\n    });\n\n    return \"M \".concat(starCoords.join(\"L\"), \" z\");\n  }\n};","map":{"version":3,"sources":["/Users/paulhinh/dev/tamuhack/EduCoin/node_modules/victory-core/es/victory-util/point-path-helpers.js"],"names":["_range","circle","x","y","size","concat","square","baseSize","x0","y1","distance","diamond","length","Math","sqrt","triangleDown","height","x1","y0","triangleUp","plus","cross","minus","lineHeight","star","angle","PI","starCoords","map","index","sin","cos","join"],"mappings":"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","sourcesContent":["import _range from \"lodash/range\";\nexport default {\n  circle: function (x, y, size) {\n    return \"M \".concat(x, \", \").concat(y, \"\\n      m \").concat(-size, \", 0\\n      a \").concat(size, \", \").concat(size, \" 0 1,0 \").concat(size * 2, \",0\\n      a \").concat(size, \", \").concat(size, \" 0 1,0 \").concat(-size * 2, \",0\");\n  },\n  square: function (x, y, size) {\n    var baseSize = 0.87 * size; // eslint-disable-line no-magic-numbers\n\n    var x0 = x - baseSize;\n    var y1 = y + baseSize;\n    var distance = x + baseSize - x0;\n    return \"M \".concat(x0, \", \").concat(y1, \"\\n      h\").concat(distance, \"\\n      v-\").concat(distance, \"\\n      h-\").concat(distance, \"\\n      z\");\n  },\n  diamond: function (x, y, size) {\n    var baseSize = 0.87 * size; // eslint-disable-line no-magic-numbers\n\n    var length = Math.sqrt(2 * (baseSize * baseSize));\n    return \"M \".concat(x, \", \").concat(y + length, \"\\n      l \").concat(length, \", -\").concat(length, \"\\n      l -\").concat(length, \", -\").concat(length, \"\\n      l -\").concat(length, \", \").concat(length, \"\\n      l \").concat(length, \", \").concat(length, \"\\n      z\");\n  },\n  triangleDown: function (x, y, size) {\n    var height = size / 2 * Math.sqrt(3);\n    var x0 = x - size;\n    var x1 = x + size;\n    var y0 = y - size;\n    var y1 = y + height;\n    return \"M \".concat(x0, \", \").concat(y0, \"\\n      L \").concat(x1, \", \").concat(y0, \"\\n      L \").concat(x, \", \").concat(y1, \"\\n      z\");\n  },\n  triangleUp: function (x, y, size) {\n    var height = size / 2 * Math.sqrt(3);\n    var x0 = x - size;\n    var x1 = x + size;\n    var y0 = y - height;\n    var y1 = y + size;\n    return \"M \".concat(x0, \", \").concat(y1, \"\\n      L \").concat(x1, \", \").concat(y1, \"\\n      L \").concat(x, \", \").concat(y0, \"\\n      z\");\n  },\n  plus: function (x, y, size) {\n    var baseSize = 1.1 * size; // eslint-disable-line no-magic-numbers\n\n    var distance = baseSize / 1.5; // eslint-disable-line no-magic-numbers\n\n    return \"\\n      M \".concat(x - distance / 2, \", \").concat(y + baseSize, \"\\n      v-\").concat(distance, \"\\n      h-\").concat(distance, \"\\n      v-\").concat(distance, \"\\n      h\").concat(distance, \"\\n      v-\").concat(distance, \"\\n      h\").concat(distance, \"\\n      v\").concat(distance, \"\\n      h\").concat(distance, \"\\n      v\").concat(distance, \"\\n      h-\").concat(distance, \"\\n      v\").concat(distance, \"\\n      z\");\n  },\n  cross: function (x, y, size) {\n    var baseSize = 0.8 * size; // eslint-disable-line no-magic-numbers\n\n    var distance = baseSize / 1.5; // eslint-disable-line no-magic-numbers\n\n    return \"\\n      M \".concat(x - distance / 2, \", \").concat(y + baseSize + distance, \"\\n      v-\").concat(distance * 2, \"\\n      h-\").concat(distance, \"\\n      v-\").concat(distance, \"\\n      h\").concat(distance, \"\\n      v-\").concat(distance, \"\\n      h\").concat(distance, \"\\n      v\").concat(distance, \"\\n      h\").concat(distance, \"\\n      v\").concat(distance, \"\\n      h-\").concat(distance, \"\\n      v\").concat(distance * 2, \"\\n      z\");\n  },\n  minus: function (x, y, size) {\n    var baseSize = 1.1 * size; // eslint-disable-line no-magic-numbers\n\n    var lineHeight = baseSize - baseSize * 0.3; // eslint-disable-line no-magic-numbers\n\n    var x0 = x - baseSize;\n    var y1 = y + lineHeight / 2;\n    var distance = x + baseSize - x0;\n    return \"M \".concat(x0, \", \").concat(y1, \"\\n      h\").concat(distance, \"\\n      v-\").concat(lineHeight, \"\\n      h-\").concat(distance, \"\\n      z\");\n  },\n  star: function (x, y, size) {\n    var baseSize = 1.35 * size; // eslint-disable-line no-magic-numbers\n\n    var angle = Math.PI / 5; // eslint-disable-line no-magic-numbers\n    // eslint-disable-next-line no-magic-numbers\n\n    var starCoords = _range(10).map(function (index) {\n      var length = index % 2 === 0 ? baseSize : baseSize / 2;\n      return \"\".concat(length * Math.sin(angle * (index + 1)) + x, \",\\n        \").concat(length * Math.cos(angle * (index + 1)) + y);\n    });\n\n    return \"M \".concat(starCoords.join(\"L\"), \" z\");\n  }\n};"]},"metadata":{},"sourceType":"module"}