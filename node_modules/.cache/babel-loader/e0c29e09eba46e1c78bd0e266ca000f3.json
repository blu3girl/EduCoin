{"ast":null,"code":"/* eslint-disable func-style */\nexport var IMMUTABLE_ITERABLE = \"@@__IMMUTABLE_ITERABLE__@@\";\nexport var IMMUTABLE_RECORD = \"@@__IMMUTABLE_RECORD__@@\";\nexport var IMMUTABLE_LIST = \"@@__IMMUTABLE_LIST__@@\";\nexport var IMMUTABLE_MAP = \"@@__IMMUTABLE_MAP__@@\";\nexport function isIterable(x) {\n  return !!(x && x[IMMUTABLE_ITERABLE]);\n}\nexport function isRecord(x) {\n  return !!(x && x[IMMUTABLE_RECORD]);\n}\nexport function isImmutable(x) {\n  return isIterable(x) || isRecord(x);\n}\nexport function isList(x) {\n  return !!(x && x[IMMUTABLE_LIST]);\n}\nexport function isMap(x) {\n  return !!(x && x[IMMUTABLE_MAP]);\n}\nexport function shallowToJS(x, whitelist) {\n  return isIterable(x) ? x.reduce(function (prev, curr, key) {\n    if (whitelist && whitelist[key]) {\n      curr = shallowToJS(curr);\n    }\n\n    prev[key] = curr;\n    return prev;\n  }, isList(x) ? [] : {}) : x;\n}","map":{"version":3,"sources":["/Users/paulhinh/dev/tamuhack/EduCoin/node_modules/victory-core/es/victory-util/immutable.js"],"names":["IMMUTABLE_ITERABLE","IMMUTABLE_RECORD","IMMUTABLE_LIST","IMMUTABLE_MAP","isIterable","x","isRecord","isImmutable","isList","isMap","shallowToJS","whitelist","reduce","prev","curr","key"],"mappings":"AAAA;AACA,OAAO,IAAIA,kBAAkB,GAAG,4BAAzB;AACP,OAAO,IAAIC,gBAAgB,GAAG,0BAAvB;AACP,OAAO,IAAIC,cAAc,GAAG,wBAArB;AACP,OAAO,IAAIC,aAAa,GAAG,uBAApB;AACP,OAAO,SAASC,UAAT,CAAoBC,CAApB,EAAuB;AAC5B,SAAO,CAAC,EAAEA,CAAC,IAAIA,CAAC,CAACL,kBAAD,CAAR,CAAR;AACD;AACD,OAAO,SAASM,QAAT,CAAkBD,CAAlB,EAAqB;AAC1B,SAAO,CAAC,EAAEA,CAAC,IAAIA,CAAC,CAACJ,gBAAD,CAAR,CAAR;AACD;AACD,OAAO,SAASM,WAAT,CAAqBF,CAArB,EAAwB;AAC7B,SAAOD,UAAU,CAACC,CAAD,CAAV,IAAiBC,QAAQ,CAACD,CAAD,CAAhC;AACD;AACD,OAAO,SAASG,MAAT,CAAgBH,CAAhB,EAAmB;AACxB,SAAO,CAAC,EAAEA,CAAC,IAAIA,CAAC,CAACH,cAAD,CAAR,CAAR;AACD;AACD,OAAO,SAASO,KAAT,CAAeJ,CAAf,EAAkB;AACvB,SAAO,CAAC,EAAEA,CAAC,IAAIA,CAAC,CAACF,aAAD,CAAR,CAAR;AACD;AACD,OAAO,SAASO,WAAT,CAAqBL,CAArB,EAAwBM,SAAxB,EAAmC;AACxC,SAAOP,UAAU,CAACC,CAAD,CAAV,GAAgBA,CAAC,CAACO,MAAF,CAAS,UAAUC,IAAV,EAAgBC,IAAhB,EAAsBC,GAAtB,EAA2B;AACzD,QAAIJ,SAAS,IAAIA,SAAS,CAACI,GAAD,CAA1B,EAAiC;AAC/BD,MAAAA,IAAI,GAAGJ,WAAW,CAACI,IAAD,CAAlB;AACD;;AAEDD,IAAAA,IAAI,CAACE,GAAD,CAAJ,GAAYD,IAAZ;AACA,WAAOD,IAAP;AACD,GAPsB,EAOpBL,MAAM,CAACH,CAAD,CAAN,GAAY,EAAZ,GAAiB,EAPG,CAAhB,GAOmBA,CAP1B;AAQD","sourcesContent":["/* eslint-disable func-style */\nexport var IMMUTABLE_ITERABLE = \"@@__IMMUTABLE_ITERABLE__@@\";\nexport var IMMUTABLE_RECORD = \"@@__IMMUTABLE_RECORD__@@\";\nexport var IMMUTABLE_LIST = \"@@__IMMUTABLE_LIST__@@\";\nexport var IMMUTABLE_MAP = \"@@__IMMUTABLE_MAP__@@\";\nexport function isIterable(x) {\n  return !!(x && x[IMMUTABLE_ITERABLE]);\n}\nexport function isRecord(x) {\n  return !!(x && x[IMMUTABLE_RECORD]);\n}\nexport function isImmutable(x) {\n  return isIterable(x) || isRecord(x);\n}\nexport function isList(x) {\n  return !!(x && x[IMMUTABLE_LIST]);\n}\nexport function isMap(x) {\n  return !!(x && x[IMMUTABLE_MAP]);\n}\nexport function shallowToJS(x, whitelist) {\n  return isIterable(x) ? x.reduce(function (prev, curr, key) {\n    if (whitelist && whitelist[key]) {\n      curr = shallowToJS(curr);\n    }\n\n    prev[key] = curr;\n    return prev;\n  }, isList(x) ? [] : {}) : x;\n}"]},"metadata":{},"sourceType":"module"}