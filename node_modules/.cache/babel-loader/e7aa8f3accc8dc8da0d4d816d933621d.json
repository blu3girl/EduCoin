{"ast":null,"code":"function compHistory(company, monthIter) {\n  var currentTimeInSeconds = Math.floor(Date.now() / 1000);\n  let startTime = currentTimeInSeconds - 2592000 * monthIter;\n  var chart = [];\n\n  const finnhub = require('finnhub');\n\n  const api_key = finnhub.ApiClient.instance.authentications['api_key'];\n  api_key.apiKey = \"c7qobl2ad3ia6nr4s5o0\";\n  const finnhubClient = new finnhub.DefaultApi();\n  let promise = new Promise(resolve => {\n    finnhubClient.stockCandles(company, \"D\", startTime, currentTimeInSeconds, (error, data, response) => {\n      var orig = data.t[0];\n\n      for (let i = 0; i < data.c.length; i++) {\n        chart.push({\n          x: data.t[i] - orig,\n          y: data.c[i]\n        });\n      }\n    });\n  });\n  promise.then(console.log()); //returns “done!”\n\n  finnhubClient.stockCandles(company, \"D\", startTime, currentTimeInSeconds, (error, data, response) => {\n    var orig = data.t[0];\n\n    for (let i = 0; i < data.c.length; i++) {\n      chart.push({\n        x: data.t[i] - orig,\n        y: data.c[i]\n      });\n    }\n  });\n  console.log(chart);\n  return chart;\n}\n\nexport default compHistory;","map":{"version":3,"sources":["/Users/paulhinh/dev/tamuhack/EduCoin/src/functions/compHistory.js"],"names":["compHistory","company","monthIter","currentTimeInSeconds","Math","floor","Date","now","startTime","chart","finnhub","require","api_key","ApiClient","instance","authentications","apiKey","finnhubClient","DefaultApi","promise","Promise","resolve","stockCandles","error","data","response","orig","t","i","c","length","push","x","y","then","console","log"],"mappings":"AACA,SAASA,WAAT,CAAqBC,OAArB,EAA6BC,SAA7B,EAAwC;AACpC,MAAIC,oBAAoB,GAACC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACC,GAAL,KAAW,IAAtB,CAAzB;AACA,MAAIC,SAAS,GAAGL,oBAAoB,GAAI,UAAQD,SAAhD;AACA,MAAIO,KAAK,GAAG,EAAZ;;AAEA,QAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,QAAMC,OAAO,GAAGF,OAAO,CAACG,SAAR,CAAkBC,QAAlB,CAA2BC,eAA3B,CAA2C,SAA3C,CAAhB;AACAH,EAAAA,OAAO,CAACI,MAAR,GAAiB,sBAAjB;AACA,QAAMC,aAAa,GAAG,IAAIP,OAAO,CAACQ,UAAZ,EAAtB;AACA,MAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AACjCJ,IAAAA,aAAa,CAACK,YAAd,CAA2BrB,OAA3B,EAAoC,GAApC,EAAyCO,SAAzC,EAAoDL,oBAApD,EAA0E,CAACoB,KAAD,EAAQC,IAAR,EAAcC,QAAd,KAA2B;AACjG,UAAIC,IAAI,GAAGF,IAAI,CAACG,CAAL,CAAO,CAAP,CAAX;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,IAAI,CAACK,CAAL,CAAOC,MAA3B,EAAmCF,CAAC,EAApC,EAAwC;AACpCnB,QAAAA,KAAK,CAACsB,IAAN,CAAW;AAACC,UAAAA,CAAC,EAAER,IAAI,CAACG,CAAL,CAAOC,CAAP,IAAUF,IAAd;AAAmBO,UAAAA,CAAC,EAAET,IAAI,CAACK,CAAL,CAAOD,CAAP;AAAtB,SAAX;AACP;AAAC,KAJF;AAKH,GANa,CAAd;AAOAT,EAAAA,OAAO,CAACe,IAAR,CAAaC,OAAO,CAACC,GAAR,EAAb,EAhBoC,CAgBP;;AAC7BnB,EAAAA,aAAa,CAACK,YAAd,CAA2BrB,OAA3B,EAAoC,GAApC,EAAyCO,SAAzC,EAAoDL,oBAApD,EAA0E,CAACoB,KAAD,EAAQC,IAAR,EAAcC,QAAd,KAA2B;AACjG,QAAIC,IAAI,GAAGF,IAAI,CAACG,CAAL,CAAO,CAAP,CAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,IAAI,CAACK,CAAL,CAAOC,MAA3B,EAAmCF,CAAC,EAApC,EAAwC;AACpCnB,MAAAA,KAAK,CAACsB,IAAN,CAAW;AAACC,QAAAA,CAAC,EAAER,IAAI,CAACG,CAAL,CAAOC,CAAP,IAAUF,IAAd;AAAmBO,QAAAA,CAAC,EAAET,IAAI,CAACK,CAAL,CAAOD,CAAP;AAAtB,OAAX;AACP;AAAC,GAJF;AAMAO,EAAAA,OAAO,CAACC,GAAR,CAAY3B,KAAZ;AACA,SAAOA,KAAP;AACH;;AAED,eAAeT,WAAf","sourcesContent":["\nfunction compHistory(company,monthIter) {\n    var currentTimeInSeconds=Math.floor(Date.now()/1000);\n    let startTime = currentTimeInSeconds - (2592000*monthIter)\n    var chart = []\n\n    const finnhub = require('finnhub');\n    const api_key = finnhub.ApiClient.instance.authentications['api_key'];\n    api_key.apiKey = \"c7qobl2ad3ia6nr4s5o0\"\n    const finnhubClient = new finnhub.DefaultApi()\n    let promise = new Promise(resolve => {\n        finnhubClient.stockCandles(company, \"D\", startTime, currentTimeInSeconds, (error, data, response) => {\n            var orig = data.t[0]\n            for (let i = 0; i < data.c.length; i++) {\n                chart.push({x: data.t[i]-orig,y: data.c[i]})\n        }})\n    });\n    promise.then(console.log()); //returns “done!”\n    finnhubClient.stockCandles(company, \"D\", startTime, currentTimeInSeconds, (error, data, response) => {\n        var orig = data.t[0]\n        for (let i = 0; i < data.c.length; i++) {\n            chart.push({x: data.t[i]-orig,y: data.c[i]})\n    }})\n\n    console.log(chart)\n    return chart\n}\n\nexport default compHistory;"]},"metadata":{},"sourceType":"module"}